/**
 * This file provides style overwrites for the theme
 *
 * See: https://v2.vuepress.vuejs.org/reference/default-theme/styles.html#palette-file
 **/



// :root {
//     // scroll-behavior: smooth;
// }

//---------------------------------------------
// Imports
//---------------------------------------------


// main theme
@import "./colors";
@import "./typography";
@import "./navbar";



html {
    background-color: white;
}


// Logo animation on color scheme change
//---------------------------------------------

// duplicate names is used to transition between different
// animations, on theme changes, as the animation is reset
@keyframes fadein_1 {
    0% { opacity: 0.01 }
    20% { opacity: 0.01 }
    100% { opacity: 1 }
}
@keyframes fadein_2 {
    0% { opacity: 0.01 }
    20% { opacity: 0.01 }
    100% { opacity: 1 }
}
html:not(.dark) .navbar .logo {
    animation: fadein_1 1s;
    content:url("/static/logo-black-text.png")
}
html.dark .navbar .logo {
    animation: fadein_2 1s;
    content:url("/static/logo-white-text.png")
}

// We preload the logo, alternative image, to make sure animation is snappy
// and does not need to wait for loading the alternative image on click
html .navbar .logo::after {
    width:1px;
    height:1px;
    opacity:0;
}
html:not(.dark) .navbar .logo::after {
    background-image: url("/static/logo-black-text.png");
}
html.dark .navbar .logo::after {
    background-image: url("/static/logo-white-text.png");
}

// Navbar links styling tweaks
//---------------------------------------------
html.dark .navbar .navbar-item a {
    color:white;
}

// Size limiting content images 
// to max resonable levels
//---------------------------------------------
.theme-default-content img.medium-zoom-image:not(.medium-zoom-image--opened) {
    max-width: min( 75vw, 75vh, var(--content-width) );
    max-height: min( 75vw, 75vh, var(--content-width) );

    // Helps center align images where possible
    text-align:center;
}

// Drop shadow styling
//---------------------------------------------
.theme-default-content img.medium-zoom-image:not(.medium-zoom-image--opened) {
    //filter: drop-shadow(0 0 5px rgba(0,0,0,0.3));
}

//---------------------------------------------------------------------
// Image preview zoom overwrites
//---------------------------------------------------------------------

:root {
    --medium-zoom-opacity: 0.5;
}

body.medium-zoom--opened .medium-zoom-image.medium-zoom-image--opened {
    filter: drop-shadow(0 0 1rem rgba(0,0,0,0.5));
}

//---------------------------------------------------------------------
// Image figcaption support
//---------------------------------------------------------------------

figure {

    //display: block;
    // width: 100%;
    padding: 0;
    //text-align: center;

    display: flex;
    flex-direction: column;
    align-items: center;

    img {

        flex-grow: 0;
        flex-shrink: 1;

        display: block;
        max-width: 100%;

    }

    figcaption{
        margin: 1rem 0;
        font-size: .85rem;
        color: #878787;
    }

}

//---------------------------------------------------------------------
// Fix iframe layout on mobile
//---------------------------------------------------------------------

body iframe {
    max-width: 100%;
}

//---------------------------------------------------------------------
// Hint block styling overwrites
//---------------------------------------------------------------------

// We use "html . page" for higher specificity then the
// default CSS rules, to overwrite the padding settings
html .page .custom-container {
    padding-top: 1em;
    padding-bottom: 1em;
}

// Lets define custom contentblock styling for "info" class
:root {
    --c-info: rgba(52,109,219,1.00)
}

// Lets overwrite for info class
html .page .custom-container.hint-info {
    border-color: var(--c-info);
}

// Lets do some flexbox alignment
// it just makes the icon alignment works
html .page .custom-container.hint {
    display: flex;
}

// Lets support the custom custom icons 
// position and alignment
.custom-container.hint .hint-icon {
    font-size: 1em;
    margin-left: -0.6em;
    margin-right: 0.6em;
    font-weight: bolder;
}

// Lets inject the various icons (for the respective mode)
.custom-container.hint-warning .hint-icon::after {
    content: "⚠";
    color: var(--c-warning);
}
.custom-container.hint-danger .hint-icon::after {
    content: "⚠";
    color: var(--c-danger);
}
.custom-container.hint-info .hint-icon::after {
    content: "ⓘ";
    color: var(--c-info);
}
.custom-container.hint-success .hint-icon::after {
    content: "☑";
    color: var(--c-tip);
}

.hint .hint-content{
    line-height: 1.7;
}

//---------------------------------------------------------------------
// Tabs block styling overwrites
//---------------------------------------------------------------------

// ---
// Pure CSS tab showing / hiding logic
// ---

// Show the sections, for the relevent checked input
.tabset input.tab-radio[type=radio]:checked + label.tab-label {
    display: block;
}

.tabset input.tab-radio[type=radio]:checked + section.tab-panel {
    display: block;
    // flex-direction: row;
    // width: 100%;
}

// Hide the section for the respective unchecked input
.tabset input.tab-radio[type=radio]:not(:checked) + label.tab-label + section.tab-panel {
    display: none; 
}

// Lets get the input out of the way
.tabset input.tab-radio {
    display: none;
}

// ---
// Flexbox sizing & alignment
// ---
body .tabset {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    width: 100%;
    max-width: 100%;
    // border: 1px solid var(--c-border);
}

.tabset label.tab-label {
    // Bias this to the start
    justify-content: flex-start;

    // Sequence this before the panels
    order: 1;
}

.tabset section.tab-panel {

    border-top: 1px solid var(--c-border);

    width: 100%;
    max-width: 100%;

    // Set it to be full width when possible
    flex: 1 0 100%;

    // Sequence this after the labels
    order: 10;
}

.tabset section.tab-panel div[class*=language] {
    display: block;
    width: 100%;
    max-width: 100%;
}

// ---
// Flexbox styling
// ---

body .tabset {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
}

.tabset label.tab-label {
    // Ensure some content padding
    padding: 0.8em 1em 0.6em 1em; //top,right,bottom,left
    margin: 0;
    margin-right: -2px;

    // Give it a general button border
    border-bottom-width: 3px;
    border-bottom-style: solid;
    border-bottom-color: var(--c-border);

}

// Give the relevent border outline for selected
.tabset input.tab-radio[type=radio]:checked + label.tab-label {
    font-weight: bold;
    border-bottom-color: var(--c-text-accent);
}

// Add the clickable cursor where relvent, and grey the background out
.tabset input.tab-radio[type=radio]:not(:checked) + label.tab-label {
    $color: #a6a6a6; 
    cursor: pointer;
    color: $color;
    border-bottom-color: $color;
}

.tabset section.tab-panel {
    padding: 1rem 0;
}

// plugins
@import "./UiChatBot";